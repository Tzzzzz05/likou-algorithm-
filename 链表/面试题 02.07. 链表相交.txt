### 力扣-[[面试题 02.07. 链表相交]](https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci/)

```cpp
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
//时间复杂度O(n)
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* A=headA;
        ListNode* B=headB;
        
        //界限判断，看是否俩链表的头指针指向空，任一为空的化，都不可能有相交的结点。
        if(headA==NULL||headB==NULL)
        {
            return NULL;
        }
        //就是只有当A和B指向相同结点时，循环才结束。
        while(A!=B)
        {
            if(A!=NULL)//A不断在自己链表上往后遍历，当指向空时，还没有与B相同
            {			//则让A指向B链表的头结点，然后继续往后遍历，直到与B相同。
                A=A->next;
            }else{
                A=headB;
            }
            if(B!=NULL)//与上步骤一致
            {
                B=B->next;
            }else{
                B=headA;
            }
        }
return A;//随便返回A和B的另一个


    }
};
```